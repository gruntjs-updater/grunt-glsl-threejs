MYPACKAGE.Simple1 = {
	uniforms: THREE.UniformsUtils.merge([
		THREE.UniformsLib["fog"],
		THREE.UniformsLib["common"],
		{
		"wrapRGB": {type: "v3",value: new THREE.Vector3(1, 1, 1)},
		"emissive": {type: "c",value: new THREE.Color(0x000000)},
		"ambient": {type: "c",value: new THREE.Color(0xffffff)},
		"booltest" : { type: "i", value: 0 },
		"booltest_v" : { type: "iv", value: [] },
		"inttest" : { type: "i", value: 0 },
		"inttest_v" : { type: "iv", value: [] },
		"opacity" : { type: "f", value: -1 },
		"floattest_v" : { type: "fv", value: [] },
		"vec2test" : { type: "v2", value: new THREE.Vector2( 0, 0 ) },
		"vec2test_v" : { type: "v2v", value: [] },
		"diffuse" : { type: "v3", value: new THREE.Vector3( 0, 0, 0 ) },
		"vec3text_v" : { type: "v3v", value: [] },
		"mat3test" : { type: "m3", value: new THREE.Matrix3( ) },
		"mat3test_v" : { type: "m3v", value: [] },
		"mat4test" : { type: "m4", value: new THREE.Matrix4( ) },
		"mat4test_v" : { type: "m4v", value: [] },
		"samplertest" : { type: "t", value: null },
		"samplertest_v" : { type: "tv", value: [] },
		}
	]),
	vertexShader: [
		THREE.ShaderChunk["map_pars_vertex"],
		'void main() {',
			THREE.ShaderChunk["map_vertex"],
			THREE.ShaderChunk["default_vertex"],
			THREE.ShaderChunk["defaultnormal_vertex"],
			THREE.ShaderChunk["worldpos_vertex"],
		'}'].join("\n"),
	fragmentShader: [
		THREE.ShaderChunk["map_pars_fragment"],
		'uniform bool booltest;',
		'uniform bool booltest_v[];',
		'uniform int inttest;',
		'uniform int inttest_v[2];',
		'uniform float opacity;',
		'uniform float floattest_v[2];',
		'uniform vec2 vec2test;',
		'uniform vec2 vec2test_v[2];',
		'uniform vec3 diffuse;',
		'uniform vec3 vec3text_v[2];',
		'uniform mat3 mat3test;',
		'uniform mat3 mat3test_v[2];',
		'uniform mat4 mat4test;',
		'uniform mat4 mat4test_v[2];',
		'uniform sampler2D samplertest;',
		'uniform sampler2D samplertest_v[2];',
		'void main() {',
		'	// comment with \'+arbiraryCode+\' ',
		'	// comment with "+arbiraryCode+"',
		'	gl_FragColor = vec4( diffuse , opacity );',
		'	gl_FragColor.xyz *= texture2D( map, vUv ).xyz;',
			THREE.ShaderChunk["linear_to_gamma_fragment"],
		'}'].join("\n")
};
